apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
        k8s-app: securedns
    name: securedns
    namespace: default
spec:
    replicas: 1
    selector:
        matchLabels:
            k8s-app: securedns
    strategy:
        rollingUpdate:
            maxSurge: 1
            maxUnavailable: 0
        type: RollingUpdate
    template:
        metadata:
            labels:
                k8s-app: securedns
                name: securedns
                blinkt: show
        spec:
            containers:
            - image: diginc/pi-hole-multiarch:debian_armhf
              name: pihole
              imagePullPolicy: Always
              env:
              - name: WEBPASSWORD
                valueFrom:
                  secretKeyRef:
                    name: securedns-admin
                    key: adminpw
              - name: ServerIP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              ports:
              - containerPort: 53
                protocol: UDP
              - containerPort: 80
                protocol: TCP
              volumeMounts:
              - name: securedns-config
                mountPath: /etc/dnsmasq.d/01-pihole.conf
                subPath: 01-pihole.conf
              - name: securedns-config
                mountPath: /etc/lighttpd/external.conf
                subPath: external.conf
            - name: cloudflared
              image: frodehus/cloudflared:v1
              imagePullPolicy: Always
              env:
              - name: TUNNEL_METRICS
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
            volumes:
            - name: securedns-config
              configMap:
                name: securedns-conf
            restartPolicy: Always
            nodeSelector:
              feature: dns
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: securedns
  labels:
    k8s-app: securedns
spec:
  ports:
    - port: 80
      name: web
    - port: 9100
      name: metrics
    - port: 53
      name: dns
      protocol: UDP
  selector:
    k8s-app: securedns
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: pihole
  labels:
    k8s-app: securedns
spec:
  ports:
    - port: 53
      name: dns
      protocol: UDP
  selector:
    k8s-app: securedns
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: pihole
  namespace: default
  labels:
    k8s-app: securedns
  annotations:
    kubernetes.io/tls-acme: "true"
    traefik.frontend.redirect.entryPoint: https
    traefik.frontend.redirect.regex: ^http://(.*)
    traefik.frontend.redirect.replacement: https://$1
    ingress.kubernetes.io/auth-type: basic
    ingress.kubernetes.io/auth-secret: securedns-webauth
spec:
  tls:
  - hosts:
      - securedns.pepperprovesapoint.com
  rules:
  - host: securedns.pepperprovesapoint.com
    http:
      paths:
      - path: /
        backend:
          serviceName: securedns
          servicePort: 80
---
apiVersion: v1
data:
  01-pihole.conf: |
    addn-hosts=/etc/pihole/gravity.list
    addn-hosts=/etc/pihole/black.list
    addn-hosts=/etc/pihole/local.list

    localise-queries

    no-resolv

    cache-size=10000

    log-queries=extra
    log-facility=/var/log/pihole.log

    local-ttl=2

    log-async
    server=127.0.0.1#54
    interface=eth0
  external.conf: |
    $HTTP["host"] == "securedns.pepperprovesapoint.com" {
    # Ensure the Pi-hole Block Page knows that this is not a blocked domain
    setenv.add-environment = ("fqdn" => "true")
    }
kind: ConfigMap
metadata:
  name: securedns-conf
  namespace: default
---
apiVersion: v1
data:
  adminpw: RGZKYTlHbkN2ZmJj
kind: Secret
metadata:
  name: securedns-admin
  namespace: default
type: Opaque
---
apiVersion: v1
data:
  auth: Y2hhb3Ntb25rZXk6JGFwcjEkOURNa0ViQ0YkU3JLdWRZTlRkLlJFa0U3WmFOV1B5Lgo=
kind: Secret
metadata:
  name: securedns-webauth
  namespace: default
type: Opaque

